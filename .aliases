alias ..="cd .."

# Shortcuts
alias c="cd ~/code"
alias g="git"
alias v="nvim"

alias m="make"
alias t="make test"

alias be="bundle exec"
alias r="bundle exec rake"

alias d="docker"
alias drm="docker run --rm"

alias dc="docker-compose"
alias dr="docker-compose run --rm"
alias de="docker-compose exec"

alias drmc="docker ps -a | awk '{print $1}' | xargs docker rm"
alias drmi="docker images |  awk '{print $3}' | xargs docker rmi"
alias dgc="docker ps -a | grep 'weeks ago' | awk '{print $1}' | xargs docker rm"
alias dgci="docker images | awk '{print $3}' | xargs docker rmi"

alias gpp="find . -type d -depth 1 -exec git --git-dir={}/.git --work-tree=$PWD/{} pull origin master \;"

# List all files colorized in long format, including dot files
alias l="ls -1F"
alias h="history 1"
alias o="open ."

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# Enable aliases to be sudo’ed
alias sudo='sudo '

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ips="ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'"

# Create a new directory and enter it
function md() {
	mkdir -p "$@" && cd "$@"
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-8000}"
	open "http://localhost:${port}/"
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
	python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Get gzipped file size
function gz() {
	echo "orig size (bytes): "
	cat "$1" | wc -c
	echo "gzipped size (bytes): "
	gzip -c "$1" | wc -c
}

# All the dig info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}
